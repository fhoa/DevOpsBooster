
name: Deploy

on:
  push:
    branches:
      - main

jobs:
  static-check-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!
  static-check-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!
  unit-test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm --prefix ./frontend install ./frontend
    - run: npm --prefix ./frontend test
  unit-test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm --prefix ./backend install ./backend
    - run: npm --prefix ./backend test
  dockerhub-push-backend:
    needs: [static-check-frontend, static-check-backend ,unit-test-backend, unit-test-frontend]
    runs-on: ubuntu-latest
    name: DockerhubPushBackend
    steps:
      - uses: actions/checkout@master
      - name: publish docker
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ secrets.DOCKER_HUB_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: backend
          tags: "backend"
  dockerhub-push-frontend:
    needs: [static-check-frontend, static-check-backend ,unit-test-backend, unit-test-frontend]
    runs-on: ubuntu-latest
    name: DockerhubPushFrontend
    steps:
      - uses: actions/checkout@master
      - name: publish docker
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          BACKEND_URL: ${{ secrets.ENV_BACKEND_URL }}
        with:
          name: ${{ secrets.DOCKER_HUB_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: frontend
          tags: "frontend"
          buildargs: BACKEND_URL
  deploy:
    needs: [dockerhub-push-frontend, dockerhub-push-backend]
    runs-on: ubuntu-latest
    name: Copy & deploy to DigitalOcean
    steps:
      - uses: actions/checkout@master
      - name: Copy docker-compose to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_IP_PROD }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: 22
          KEY: ${{ secrets.SSHKEY }}
          source: "docker-compose.prod.yaml"
          target: "./fitnessportalen/"
      - name: Copy nginx to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_IP_PROD }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: 22
          KEY: ${{ secrets.SSHKEY }}
          source: "nginx/"
          target: "./fitnessportalen/"
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_IP_PROD }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: 22
          KEY: ${{ secrets.SSHKEY }}
          script: |
            cd ./fitnessportalen/
            export DOCKER_HUB_NAME=${{secrets.DOCKER_HUB_NAME}}
            docker login -u=${{secrets.DOCKER_USERNAME}} -p=${{secrets.DOCKER_PASSWORD}}
            docker-compose -f docker-compose.prod.yaml pull
            docker-compose -f docker-compose.prod.yaml up -d
